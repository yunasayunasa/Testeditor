/* ==========================================================================
   Odyssey Engine - Main Stylesheet
   Version: 1.0 (Final & Complete)
   ========================================================================== */

/* --- 基本設定 & フォント --- */
body {
    margin: 0;
    padding: 0;
    background-color: #1e1e1e; /* デフォルトの背景色 */
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
   /* overflow: hidden;完成時はこっち*/
    overflow-x: auto;
    color: #d4d4d4;
}

/* --- レイアウトコンテナ --- */
#game-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

#editor-root {
    display: none; /* デバッグモード以外では非表示 */
}

/* ==========================================================================
   DEBUG MODE STYLES
   ========================================================================== */
body.debug-mode {
    display: flex;
    height: 100vh; /* ビューポートの高さに固定 */
    overflow: hidden; /* スクロールバーを完全に消す */
    flex-direction: column; /* ★ レイアウトの主軸を「縦」に変更 */
}

body.debug-mode #game-container {
    position: relative;
    /* width/heightはPhaserが設定するので不要な場合が多い */
    /* width: 1280px; */
    /* height: 720px; */
    margin: auto; /* ★ 上下にマージンを取るように変更 */
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);
    flex-shrink: 0;
     z-index: 10; 
    /* ▼▼▼【ここからが核心的な修正です】▼▼▼ */
    flex-grow: 1; /* ★ 利用可能なスペースを全て使うように設定 */
    transition: height 0.3s ease-in-out; /* ★ 高さ変更をアニメーションさせる */
}

/* ★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
   ★★★ タイルマップモード時のレイアウト変更 ★★★
   ★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★ */
body.tilemap-mode #game-container {
    /* ★ ボトムパネルの高さ(220px)だけ、高さを縮める */
    height: calc(100% - 220px) !important; 
}



/* --- サイドバー --- */
/* ★ flex-direction: row を持つ親を作る */
#main-content {
    display: flex;
    flex-direction: row;
    flex-grow: 1; /* ★ 利用可能な高さを全て使う */
    overflow: hidden; /* ★ これが重要 */
}

#editor-sidebar {
    /* ... (既存のスタイルはほぼ変更なし) ... */
    height: 100%; /* ★ 親の高さに追従するように変更 */
    /* calc(100vh - 20px) は不要になる */
}

.editor-panel {
    background-color: #1e1e1e;
    border: 1px solid #3c3c3c;
    border-radius: 5px;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}
#asset-browser { flex: 1; }
#editor-panel { flex: 1; }

/* in style.css */

/* --- サイドバー --- */
/* .panel-header のスタイルを修正 */
.panel-header {
    padding: 8px 12px;
    background-color: #3c3c3c;
    border-bottom: 1px solid #1e1e1e;
    font-weight: bold;
    display: flex;
    align-items: center;
    justify-content: space-between; /* ★ これが左右に要素を振り分ける魔法 */
    user-select: none;
}

/* ▼▼▼【ここから新しいスタイルを追加】▼▼▼ */

.panel-header-buttons {
    display: flex;
    align-items: center;
    gap: 8px; /* ボタン同士の間隔 */
}

.panel-header-buttons button {
    /* ヘッダー内の全てのボタンに共通のスタイルを適用 */
    padding: 2px 8px;
    border-radius: 4px;
    border: 1px solid #555;
    background-color: #444;
    color: #eee;
    cursor: pointer;
    font-size: 1em; /* T+ボタンのフォントサイズを他と合わせる */
}

.panel-header-buttons button:hover {
    background-color: #5a5a5a;
}
/* ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲ */
.panel-content {
    padding: 10px;
    flex-grow: 1;
    overflow-y: auto;
}
.panel-footer-button {
    width: 100%;
    padding: 10px;
    background-color: #0e639c;
    color: white;
    border: none;
    cursor: pointer;
    font-size: 14px;
    border-top: 1px solid #3c3c3c;
}
.panel-footer-button:hover { background-color: #1177bb; }
.panel-tabs {
display: flex;
background-color: #252526;
border-bottom: 1px solid #3c3c3c;
padding: 5px 5px 0 5px;
gap: 5px;
}
.asset-tab {
padding: 8px 12px;
border: 1px solid #3c3c3c;
border-bottom: none;
background-color: #1e1e1e;
color: #888;
cursor: pointer;
border-radius: 4px 4px 0 0;
user-select: none;
}
.asset-tab.active {
background-color: #2b2b2b; 
color: #eee;
border-color: #555;
}
/* --- アセットブラウザの中身 --- */
.asset-item {
    display: flex;
    align-items: center;
    padding: 5px;
    border-bottom: 1px solid #3c3c3c;
    cursor: grab;
    user-select: none;
}
.asset-item:hover { background-color: #3c3c3c; }
.asset-item.selected { background-color: #094771; }
.asset-preview {
    width: 48px;
    height: 48px;
    object-fit: contain;
    margin-right: 10px;
    background-color: #1e1e1e;
    border: 1px solid #3c3c3c;
}

/* --- プロパティパネルの中身 --- */
#editor-props label {
    display: inline-block;
    width: 80px;
    font-size: 13px;
    margin-right: 5px;
    color: #ccc;
    flex-shrink: 0;
}
#editor-props input, 
#editor-props select, 
#editor-props textarea {
    flex-grow: 1;
    background-color: #3c3c3c;
    border: 1px solid #1e1e1e;
    color: #d4d4d4;
    padding: 4px;
    border-radius: 3px;
    width: auto;
}
#editor-props div {
    margin-bottom: 8px;
    display: flex;
    align-items: center;
    gap: 5px;
}
#editor-props hr {
    border: none;
    border-top: 1px solid #3c3c3c;
    margin: 15px 0;
}
#editor-props button {
    width: 100%;
    padding: 8px;
    background-color: #0e639c;
    color: white;
    border: none;
    border-radius: 3px;
    cursor: pointer;
    font-size: 14px;
}
#editor-props button:hover { background-color: #1177bb; }

/* --- 画面左下のオーバーレイコントロールの重ね順とアニメーション --- */
#overlay-controls {
    position: absolute;
    bottom: 10px;
    left: 10px;
    z-index: 10000; /* ★ ボトムパネルより手前に来るように高い値を設定 */
    transition: transform 0.3s ease-in-out;
}

/* ★★★ タイルマップモード時に、#overlay-controlsを上に押し上げる ★★★ */
body.tilemap-mode #overlay-controls {
    transform: translateY(-220px); /* ボトムパネルの高さ分だけ上に移動 */
}
#camera-controls {
    background-color: rgba(40, 40, 40, 0.8);
    border-radius: 5px;
    padding: 5px;
    display: flex;
    gap: 5px;
}
#camera-controls button {
    width: 35px;
    height: 35px;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    background-color: #555;
    color: #eee;
    border: 1px solid #777;
    border-radius: 5px;
}
#camera-controls button:hover { background-color: #6a6a6a; }
#camera-controls button:active { background-color: #4a4a4a; }

#editor-mode-controls {
    display: flex;
    align-items: center;
    gap: 10px;
    background-color: rgba(40, 40, 40, 0.8);
    padding: 5px; /* 少しpaddingを調整 */
    border-radius: 5px; /* 角丸にする */
    color: white;
    font-size: 14px;
    user-select: none;
}
.mode-button {
    padding: 5px 15px;
    border: 1px solid #333;
    background-color: #555;
    color: #ccc;
    cursor: pointer;
}

.mode-button.active {
    background-color: #0e639c;
    color: white;
}
.mode-switch {
    position: relative;
    display: inline-block;
    width: 50px;
    height: 24px;
}
.mode-switch input { opacity: 0; width: 0; height: 0; }
.slider {
    position: absolute;
    cursor: pointer;
    top: 0; left: 0; right: 0; bottom: 0;
    background-color: #888;
    transition: .4s;
    border-radius: 24px;
}
.slider:before {
    position: absolute;
    content: "";
    height: 18px; width: 18px;
    left: 3px; bottom: 3px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}
input:checked + .slider { background-color: #2196F3; }
input:checked + .slider:before { transform: translateX(26px); }

/* ==========================================================================
   MODAL WINDOW STYLES
   ========================================================================== */



.modal-window {
    width: 90%;
    max-width: 700px;
    max-height: 80vh;
    background-color: #2b2b2b;
    border-radius: 8px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);
    display: flex;
    flex-direction: column;
}

.modal-header {
    padding: 10px 15px;
    background-color: #3c3c3c;
    display: flex;
    align-items: center;
    border-bottom: 1px solid #1e1e1e;
    user-select: none;
}
.modal-header h3 {
    margin: 0;
    font-size: 1.1em;
}

.modal-close-btn, .modal-help-btn {
    cursor: pointer;
    border: none;
    background: none;
    color: #d4d4d4;
    font-size: 24px;
    line-height: 1;
    padding: 0 5px;
}
.modal-help-btn {
    margin-left: auto;
    font-size: 18px;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    background-color: #555;
}

.modal-content {
    padding: 15px;
    overflow-y: auto;
    flex-grow: 1;
}
.modal-sub-panel {
    display: none;
    padding: 15px;
    background-color: #1e1e1e;
    border-top: 1px solid #555;
    max-height: 200px;
    overflow-y: auto;
}
.modal-sub-panel.is-visible {
    display: block;
}

/* --- モーダル表示中の背景制御 --- */
body.modal-open #game-container,
body.modal-open #editor-root {
    pointer-events: none;
    filter: blur(2px);
}

/* in index.html <style> tag */

/* --- モーダルウィンドウ共通の調整 --- */
.modal-window {
    /* 既存の .modal-window のスタイルに display: flex と flex-direction: column を追加または確認 */
    display: flex;
    flex-direction: column;
}

.modal-content {
    /* 既存の .modal-content のスタイルに flex-grow: 1 を追加または確認 */
    flex-grow: 1;
}

/* ▼▼▼【ここからイベントエディタ専用のスタイルを追加】▼▼▼ */

#event-editor-content label {
    display: inline-block;
    width: auto; /* #editor-props の幅指定を打ち消す */
    margin-right: 5px;
    color: #ccc;
    flex-shrink: 0;
}

#event-editor-content input, 
#event-editor-content select, 
#event-editor-content textarea {
    flex-grow: 1;
    background-color: #3c3c3c;
    border: 1px solid #1e1e1e;
    color: #d4d4d4;
    padding: 4px;
    border-radius: 3px;
    width: auto;
}

#event-editor-content .add-event-button {
    width: 100%;
    padding: 10px;
    margin-top: 15px; /* 上の要素との間に余白を設ける */
    background-color: #4a8a4a; /* より分かりやすい色に */
    color: white;
    border: none;
    border-radius: 3px;
    cursor: pointer;
    font-size: 14px;
}
#event-editor-content .add-event-button:hover { 
    background-color: #5cb85c;
}
/* in your main CSS file */

.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    
    /* ▼▼▼【ここからが重要】▼▼▼ */
    z-index: 10000;  /* 非常に大きな値を設定し、他のどの要素よりも手前に来るようにする */
    pointer-events: auto; /* この要素自身とその子要素が、マウスクリックを受け付けることを保証する */
    /* ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲ */

    display: none; /* is-activeクラスで表示を切り替える */
    justify-content: center;
    align-items: center;
}

.modal-overlay.is-active {
    display: flex;
}


/* ▼▼▼【ここからがモーダルが吸われる問題の最終修正です】▼▼▼ */

#help-modal-overlay,
#event-editor-overlay,
#anim-editor-overlay {
    z-index: 10000;
    pointer-events: auto; /* このオーバーレイ自身がイベントを受け取ることを保証 */
}

/* オーバーレイの中のウィンドウは、さらに手前にいることを保証 */
#help-modal-overlay .modal-window,
#event-editor-overlay .modal-window,
#anim-editor-overlay .modal-window {
    z-index: 10001; 
    pointer-events: all; /* ウィンドウ内の全ての要素(ボタン含む)がイベントを受け取る */
}

/* ==========================================================================
   BOTTOM PANEL STYLES (for Tilemap Editor)
   ========================================================================== */

/* --- BOTTOM PANEL STYLES (for Tilemap Editor) --- */
#bottom-panel {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    background-color: #252526;
    border-top: 1px solid #3c3c3c;
    z-index: 9995; /* overlay-controlsよりは低い値 */
    height: 220px;
    
    /* 初期状態では、下に隠しておく */
    transform: translateY(100%); 
    transition: transform 0.3s ease-in-out;
}

/* ★★★ タイルマップモード時に、UIをスライドさせる ★★★ */
body.tilemap-mode #bottom-panel {
    transform: translateY(0); /* 画面内にスライドイン */
}
body.tilemap-mode #overlay-controls {
    transform: translateY(-220px); /* ボトムパネルの高さ分だけ上にスライド */
}


#tilemap-editor-panel {
    display: flex;
    justify-content: space-between;
    height: 200px; /* パネルの高さ */
    padding: 10px;
    gap: 10px;
}

.bottom-panel-section {
    background-color: #1e1e1e;
    border: 1px solid #3c3c3c;
    border-radius: 5px;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

.panel-section-header {
    padding: 5px 10px;
    background-color: #3c3c3c;
    font-weight: bold;
    font-size: 13px;
    user-select: none;
}

.panel-section-content {
    padding: 5px;
    flex-grow: 1;
    overflow: auto; /* コンテンツがはみ出たらスクロール */
}

/* --- 個別セクションのスタイル --- */

/* ツールパネル */
#tools-panel {
    flex-basis: 80px; /* 幅を固定 */
    flex-shrink: 0;
}
#tools-panel .panel-section-content {
    display: flex;
    flex-direction: column;
    gap: 5px;
}
.tool-button {
    width: 100%;
    height: 40px;
    background-color: #555;
    border: 1px solid #777;
    border-radius: 3px;
    cursor: pointer;
}
.tool-button:hover { background-color: #6a6a6a; }
.tool-button.active {
    background-color: #0e639c; /* 選択中のツールの色 */
    border-color: #1177bb;
}
.tool-button img { width: 24px; height: 24px; }

/* レイヤーパネル */
#layers-panel {
    flex-basis: 200px;
    flex-shrink: 0;
}
.layer-item {
    display: flex;
    align-items: center;
    padding: 5px;
    gap: 10px;
    cursor: pointer;
    user-select: none;
}
.layer-item:hover { background-color: #3c3c3c; }
.layer-item .layer-name { flex-grow: 1; }

/* タイルセットパネル */
#tileset-panel {
    flex-grow: 1; /* 残りの幅を全て使う */
}

#tileset-preview {
    position: relative; /* 選択範囲ハイライトの基準にする */
    background-color: #111;
}